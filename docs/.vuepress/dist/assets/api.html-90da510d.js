import{_ as a,o as n,c as s,a as e}from"./app-30a05bfa.js";const p={},t=e(`<h1 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference" aria-hidden="true">#</a> API reference</h1><p>This API is compliant with C ABI and can thus be used by any language that can conform to it (C, C++, Zig, Rust, etc.).</p><div class="custom-container tip"><p class="custom-container-title">Warning</p><p>This API is unstable and will likely change a lot in the future.</p></div><h2 id="bz-allocated" tabindex="-1"><a class="header-anchor" href="#bz-allocated" aria-hidden="true">#</a> <code>bz_allocated</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_allocated</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">;</span>
</code></pre></div><p>Return the memory currently allocated by the given VM and any VM using the same garbage collector</p><h2 id="bz-at" tabindex="-1"><a class="header-anchor" href="#bz-at" aria-hidden="true">#</a> <code>bz_at</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_at</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> at<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">u32</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><p>Returns the value at an absolute index of the stack</p><h2 id="bz-call" tabindex="-1"><a class="header-anchor" href="#bz-call" aria-hidden="true">#</a> <code>bz_call</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_call</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> closure<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token operator">*</span><span class="token keyword">const</span> Value</span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> catch_value<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">?</span><span class="token operator">*</span>Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><p>Call a closure</p><h2 id="bz-clone" tabindex="-1"><a class="header-anchor" href="#bz-clone" aria-hidden="true">#</a> <code>bz_clone</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_clone</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><p>Clone a value</p><h2 id="bz-collect" tabindex="-1"><a class="header-anchor" href="#bz-collect" aria-hidden="true">#</a> <code>bz_collect</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_collect</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><p>Trigger a GC sweep</p><h2 id="bz-currentfiber" tabindex="-1"><a class="header-anchor" href="#bz-currentfiber" aria-hidden="true">#</a> <code>bz_currentFiber</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_currentFiber</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><p>Returns the current fiber</p><h2 id="bz-deinitvm" tabindex="-1"><a class="header-anchor" href="#bz-deinitvm" aria-hidden="true">#</a> <code>bz_deinitVM</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_deinitVM</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><p>Deinitializes and destroys a VM</p><h2 id="bz-dumpstack" tabindex="-1"><a class="header-anchor" href="#bz-dumpstack" aria-hidden="true">#</a> <code>bz_dumpStack</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_dumpStack</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><p>Dump the stack content</p><h2 id="bz-enumnext" tabindex="-1"><a class="header-anchor" href="#bz-enumnext" aria-hidden="true">#</a> <code>bz_enumNext</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_enumNext</span><span class="token punctuation">(</span>enum_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> case<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><p>Get next enum case given the current one</p><h2 id="bz-foreigncontainerget" tabindex="-1"><a class="header-anchor" href="#bz-foreigncontainerget" aria-hidden="true">#</a> <code>bz_foreignContainerGet</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_foreignContainerGet</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> field_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-foreigncontainerset" tabindex="-1"><a class="header-anchor" href="#bz-foreigncontainerset" aria-hidden="true">#</a> <code>bz_foreignContainerSet</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_foreignContainerSet</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> field_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> new_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-foreigncontainerslice" tabindex="-1"><a class="header-anchor" href="#bz-foreigncontainerslice" aria-hidden="true">#</a> <code>bz_foreignContainerSlice</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_foreignContainerSlice</span><span class="token punctuation">(</span>container_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token builtin-type keyword">u8</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getenumcase" tabindex="-1"><a class="header-anchor" href="#bz-getenumcase" aria-hidden="true">#</a> <code>bz_getEnumCase</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getEnumCase</span><span class="token punctuation">(</span>enum_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> case_name_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getenumcasefromvalue" tabindex="-1"><a class="header-anchor" href="#bz-getenumcasefromvalue" aria-hidden="true">#</a> <code>bz_getEnumCaseFromValue</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getEnumCaseFromValue</span><span class="token punctuation">(</span>enum_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> case_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getenuminstancevalue" tabindex="-1"><a class="header-anchor" href="#bz-getenuminstancevalue" aria-hidden="true">#</a> <code>bz_getEnumInstanceValue</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getEnumInstanceValue</span><span class="token punctuation">(</span>enum_instance_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getfiberproperty" tabindex="-1"><a class="header-anchor" href="#bz-getfiberproperty" aria-hidden="true">#</a> <code>bz_getFiberProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getFiberProperty</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> fiber<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> property_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getlistproperty" tabindex="-1"><a class="header-anchor" href="#bz-getlistproperty" aria-hidden="true">#</a> <code>bz_getListProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getListProperty</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> list<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> property_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> bind<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getmapproperty" tabindex="-1"><a class="header-anchor" href="#bz-getmapproperty" aria-hidden="true">#</a> <code>bz_getMapProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getMapProperty</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> map<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> property_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> bind<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getobjectfield" tabindex="-1"><a class="header-anchor" href="#bz-getobjectfield" aria-hidden="true">#</a> <code>bz_getObjectField</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getObjectField</span><span class="token punctuation">(</span>object_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> field_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getobjectinstancemethod" tabindex="-1"><a class="header-anchor" href="#bz-getobjectinstancemethod" aria-hidden="true">#</a> <code>bz_getObjectInstanceMethod</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getObjectInstanceMethod</span><span class="token punctuation">(</span>instance_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> method_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> bind<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getobjectinstanceproperty" tabindex="-1"><a class="header-anchor" href="#bz-getobjectinstanceproperty" aria-hidden="true">#</a> <code>bz_getObjectInstanceProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getObjectInstanceProperty</span><span class="token punctuation">(</span>instance_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> property_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getpatternproperty" tabindex="-1"><a class="header-anchor" href="#bz-getpatternproperty" aria-hidden="true">#</a> <code>bz_getPatternProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getPatternProperty</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> pattern<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> property_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getprotocolmethod" tabindex="-1"><a class="header-anchor" href="#bz-getprotocolmethod" aria-hidden="true">#</a> <code>bz_getProtocolMethod</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getProtocolMethod</span><span class="token punctuation">(</span>instance_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> method_name<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getqualified" tabindex="-1"><a class="header-anchor" href="#bz-getqualified" aria-hidden="true">#</a> <code>bz_getQualified</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getQualified</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> qualified_name<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getrangeproperty" tabindex="-1"><a class="header-anchor" href="#bz-getrangeproperty" aria-hidden="true">#</a> <code>bz_getRangeProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getRangeProperty</span><span class="token punctuation">(</span>range_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> property_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> bind<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getstringproperty" tabindex="-1"><a class="header-anchor" href="#bz-getstringproperty" aria-hidden="true">#</a> <code>bz_getStringProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getStringProperty</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> string<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> method_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getupvalue" tabindex="-1"><a class="header-anchor" href="#bz-getupvalue" aria-hidden="true">#</a> <code>bz_getUpValue</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getUpValue</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>NativeCtx</span><span class="token punctuation">,</span> slot<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-getuserdataptr" tabindex="-1"><a class="header-anchor" href="#bz-getuserdataptr" aria-hidden="true">#</a> <code>bz_getUserDataPtr</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_getUserDataPtr</span><span class="token punctuation">(</span>userdata<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">u64</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-listappend" tabindex="-1"><a class="header-anchor" href="#bz-listappend" aria-hidden="true">#</a> <code>bz_listAppend</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_listAppend</span><span class="token punctuation">(</span>list<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-listconcat" tabindex="-1"><a class="header-anchor" href="#bz-listconcat" aria-hidden="true">#</a> <code>bz_listConcat</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_listConcat</span><span class="token punctuation">(</span>list<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> other_list<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-listget" tabindex="-1"><a class="header-anchor" href="#bz-listget" aria-hidden="true">#</a> <code>bz_listGet</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_listGet</span><span class="token punctuation">(</span>list<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">i32</span></span><span class="token punctuation">,</span> checked<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-listlen" tabindex="-1"><a class="header-anchor" href="#bz-listlen" aria-hidden="true">#</a> <code>bz_listLen</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_listLen</span><span class="token punctuation">(</span>list<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-listnext" tabindex="-1"><a class="header-anchor" href="#bz-listnext" aria-hidden="true">#</a> <code>bz_listNext</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_listNext</span><span class="token punctuation">(</span>list_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-listset" tabindex="-1"><a class="header-anchor" href="#bz-listset" aria-hidden="true">#</a> <code>bz_listSet</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_listSet</span><span class="token punctuation">(</span>list<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-listtype" tabindex="-1"><a class="header-anchor" href="#bz-listtype" aria-hidden="true">#</a> <code>bz_listType</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_listType</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> item_type<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> mutable<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-mapconcat" tabindex="-1"><a class="header-anchor" href="#bz-mapconcat" aria-hidden="true">#</a> <code>bz_mapConcat</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_mapConcat</span><span class="token punctuation">(</span>map<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> other_map<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-mapget" tabindex="-1"><a class="header-anchor" href="#bz-mapget" aria-hidden="true">#</a> <code>bz_mapGet</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_mapGet</span><span class="token punctuation">(</span>map<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-mapnext" tabindex="-1"><a class="header-anchor" href="#bz-mapnext" aria-hidden="true">#</a> <code>bz_mapNext</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_mapNext</span><span class="token punctuation">(</span>map_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-mapset" tabindex="-1"><a class="header-anchor" href="#bz-mapset" aria-hidden="true">#</a> <code>bz_mapSet</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_mapSet</span><span class="token punctuation">(</span>map<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-maptype" tabindex="-1"><a class="header-anchor" href="#bz-maptype" aria-hidden="true">#</a> <code>bz_mapType</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_mapType</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> key_type<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> value_type<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> mutable<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-memcpy" tabindex="-1"><a class="header-anchor" href="#bz-memcpy" aria-hidden="true">#</a> <code>bz_memcpy</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_memcpy</span><span class="token punctuation">(</span>dest<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> dest_len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> source<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> source_len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newforeigncontainerfromslice" tabindex="-1"><a class="header-anchor" href="#bz-newforeigncontainerfromslice" aria-hidden="true">#</a> <code>bz_newForeignContainerFromSlice</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newForeignContainerFromSlice</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> type_def<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> ptr<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newforeigncontainerinstance" tabindex="-1"><a class="header-anchor" href="#bz-newforeigncontainerinstance" aria-hidden="true">#</a> <code>bz_newForeignContainerInstance</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newForeignContainerInstance</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> typedef_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newlist" tabindex="-1"><a class="header-anchor" href="#bz-newlist" aria-hidden="true">#</a> <code>bz_newList</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newList</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> list_type<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newmap" tabindex="-1"><a class="header-anchor" href="#bz-newmap" aria-hidden="true">#</a> <code>bz_newMap</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newMap</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> map_type<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newobjectinstance" tabindex="-1"><a class="header-anchor" href="#bz-newobjectinstance" aria-hidden="true">#</a> <code>bz_newObjectInstance</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newObjectInstance</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> object_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> typedef_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newqualifiedobjectinstance" tabindex="-1"><a class="header-anchor" href="#bz-newqualifiedobjectinstance" aria-hidden="true">#</a> <code>bz_newQualifiedObjectInstance</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newQualifiedObjectInstance</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> qualified_name<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> mutable<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newrange" tabindex="-1"><a class="header-anchor" href="#bz-newrange" aria-hidden="true">#</a> <code>bz_newRange</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newRange</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> low<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">i32</span></span><span class="token punctuation">,</span> high<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">i32</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newuserdata" tabindex="-1"><a class="header-anchor" href="#bz-newuserdata" aria-hidden="true">#</a> <code>bz_newUserData</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newUserData</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> userdata<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">u64</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-newvm" tabindex="-1"><a class="header-anchor" href="#bz-newvm" aria-hidden="true">#</a> <code>bz_newVM</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_newVM</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-panic" tabindex="-1"><a class="header-anchor" href="#bz-panic" aria-hidden="true">#</a> <code>bz_panic</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_panic</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> msg<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-peek" tabindex="-1"><a class="header-anchor" href="#bz-peek" aria-hidden="true">#</a> <code>bz_peek</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_peek</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> distance<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">u32</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-pop" tabindex="-1"><a class="header-anchor" href="#bz-pop" aria-hidden="true">#</a> <code>bz_pop</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_pop</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-poptryctx" tabindex="-1"><a class="header-anchor" href="#bz-poptryctx" aria-hidden="true">#</a> <code>bz_popTryCtx</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_popTryCtx</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-push" tabindex="-1"><a class="header-anchor" href="#bz-push" aria-hidden="true">#</a> <code>bz_push</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_push</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-pusherror" tabindex="-1"><a class="header-anchor" href="#bz-pusherror" aria-hidden="true">#</a> <code>bz_pushError</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_pushError</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> qualified_name<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> mlen<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-pusherrorenum" tabindex="-1"><a class="header-anchor" href="#bz-pusherrorenum" aria-hidden="true">#</a> <code>bz_pushErrorEnum</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_pushErrorEnum</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> qualified_name<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> name_len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> case<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> case_len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-rangenext" tabindex="-1"><a class="header-anchor" href="#bz-rangenext" aria-hidden="true">#</a> <code>bz_rangeNext</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_rangeNext</span><span class="token punctuation">(</span>range_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> index_slot<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-readzigvaluefrombuffer" tabindex="-1"><a class="header-anchor" href="#bz-readzigvaluefrombuffer" aria-hidden="true">#</a> <code>bz_readZigValueFromBuffer</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_readZigValueFromBuffer</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> ztype<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>ZigType</span><span class="token punctuation">,</span> at<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> buf<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-rethrow" tabindex="-1"><a class="header-anchor" href="#bz-rethrow" aria-hidden="true">#</a> <code>bz_rethrow</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_rethrow</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-run" tabindex="-1"><a class="header-anchor" href="#bz-run" aria-hidden="true">#</a> <code>bz_run</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_run</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> source<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> source_len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> file_name<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> file_name_len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-serialize" tabindex="-1"><a class="header-anchor" href="#bz-serialize" aria-hidden="true">#</a> <code>bz_serialize</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_serialize</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> error_value<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-setobjectfield" tabindex="-1"><a class="header-anchor" href="#bz-setobjectfield" aria-hidden="true">#</a> <code>bz_setObjectField</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_setObjectField</span><span class="token punctuation">(</span>object_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> field_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-setobjectinstanceproperty" tabindex="-1"><a class="header-anchor" href="#bz-setobjectinstanceproperty" aria-hidden="true">#</a> <code>bz_setObjectInstanceProperty</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_setObjectInstanceProperty</span><span class="token punctuation">(</span>instance_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> property_idx<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-settryctx" tabindex="-1"><a class="header-anchor" href="#bz-settryctx" aria-hidden="true">#</a> <code>bz_setTryCtx</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_setTryCtx</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token operator">*</span>TryCtx</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-setupvalue" tabindex="-1"><a class="header-anchor" href="#bz-setupvalue" aria-hidden="true">#</a> <code>bz_setUpValue</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_setUpValue</span><span class="token punctuation">(</span>ctx<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>NativeCtx</span><span class="token punctuation">,</span> slot<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-stringconcat" tabindex="-1"><a class="header-anchor" href="#bz-stringconcat" aria-hidden="true">#</a> <code>bz_stringConcat</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_stringConcat</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-stringnext" tabindex="-1"><a class="header-anchor" href="#bz-stringnext" aria-hidden="true">#</a> <code>bz_stringNext</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_stringNext</span><span class="token punctuation">(</span>string_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> index<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-stringsubscript" tabindex="-1"><a class="header-anchor" href="#bz-stringsubscript" aria-hidden="true">#</a> <code>bz_stringSubscript</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_stringSubscript</span><span class="token punctuation">(</span>obj_string<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> index_value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> checked<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-stringtovalue" tabindex="-1"><a class="header-anchor" href="#bz-stringtovalue" aria-hidden="true">#</a> <code>bz_stringToValue</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_stringToValue</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> string<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-stringtovaluez" tabindex="-1"><a class="header-anchor" href="#bz-stringtovaluez" aria-hidden="true">#</a> <code>bz_stringToValueZ</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_stringToValueZ</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> string<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-stringtype" tabindex="-1"><a class="header-anchor" href="#bz-stringtype" aria-hidden="true">#</a> <code>bz_stringType</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_stringType</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-throw" tabindex="-1"><a class="header-anchor" href="#bz-throw" aria-hidden="true">#</a> <code>bz_throw</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_throw</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valuecasttostring" tabindex="-1"><a class="header-anchor" href="#bz-valuecasttostring" aria-hidden="true">#</a> <code>bz_valueCastToString</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueCastToString</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valuedump" tabindex="-1"><a class="header-anchor" href="#bz-valuedump" aria-hidden="true">#</a> <code>bz_valueDump</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueDump</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valueequal" tabindex="-1"><a class="header-anchor" href="#bz-valueequal" aria-hidden="true">#</a> <code>bz_valueEqual</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueEqual</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valueis" tabindex="-1"><a class="header-anchor" href="#bz-valueis" aria-hidden="true">#</a> <code>bz_valueIs</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueIs</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> type_def<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valueisforeigncontainer" tabindex="-1"><a class="header-anchor" href="#bz-valueisforeigncontainer" aria-hidden="true">#</a> <code>bz_valueIsForeignContainer</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueIsForeignContainer</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">bool</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valuetocstring" tabindex="-1"><a class="header-anchor" href="#bz-valuetocstring" aria-hidden="true">#</a> <code>bz_valueToCString</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueToCString</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valuetoforeigncontainerptr" tabindex="-1"><a class="header-anchor" href="#bz-valuetoforeigncontainerptr" aria-hidden="true">#</a> <code>bz_valueToForeignContainerPtr</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueToForeignContainerPtr</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token builtin-type keyword">u8</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valuetostring" tabindex="-1"><a class="header-anchor" href="#bz-valuetostring" aria-hidden="true">#</a> <code>bz_valueToString</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueToString</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token operator">?</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-valuetypeof" tabindex="-1"><a class="header-anchor" href="#bz-valuetypeof" aria-hidden="true">#</a> <code>bz_valueTypeOf</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_valueTypeOf</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-writezigvaluetobuffer" tabindex="-1"><a class="header-anchor" href="#bz-writezigvaluetobuffer" aria-hidden="true">#</a> <code>bz_writeZigValueToBuffer</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_writeZigValueToBuffer</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Value</span><span class="token punctuation">,</span> ztype<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span><span class="token keyword">const</span> ZigType</span><span class="token punctuation">,</span> at<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> buf<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> capacity<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-zigtype" tabindex="-1"><a class="header-anchor" href="#bz-zigtype" aria-hidden="true">#</a> <code>bz_zigType</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_zigType</span><span class="token punctuation">(</span>vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">,</span> ztype<span class="token punctuation">:</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">,</span> len<span class="token punctuation">:</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">,</span> expected_type<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>Value</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token operator">?</span><span class="token operator">*</span>ZigType</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-zigtypealignment" tabindex="-1"><a class="header-anchor" href="#bz-zigtypealignment" aria-hidden="true">#</a> <code>bz_zigTypeAlignment</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_zigTypeAlignment</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>ZigType</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">u16</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-zigtypesize" tabindex="-1"><a class="header-anchor" href="#bz-zigtypesize" aria-hidden="true">#</a> <code>bz_zigTypeSize</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_zigTypeSize</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>ZigType</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">usize</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bz-zigtypetocstring" tabindex="-1"><a class="header-anchor" href="#bz-zigtypetocstring" aria-hidden="true">#</a> <code>bz_zigTypeToCString</code></h2><div class="language-zig" data-ext="zig"><pre class="language-zig"><code><span class="token keyword">fn</span> <span class="token function">bz_zigTypeToCString</span><span class="token punctuation">(</span>self<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>ZigType</span><span class="token punctuation">,</span> vm<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>VM</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">const</span> <span class="token builtin-type keyword">u8</span></span><span class="token punctuation">;</span>
</code></pre></div>`,186),c=[t];function o(l,u){return n(),s("div",null,c)}const k=a(p,[["render",o],["__file","api.html.vue"]]);export{k as default};
