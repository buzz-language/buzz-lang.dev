import{_ as i,b as l,o,c as s,e,f as a,k as t,a as r}from"./app-30a05bfa.js";const c={},u=e("h1",{id:"building-and-installing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#building-and-installing","aria-hidden":"true"},"#"),a(" Building and installing")],-1),d=e("h2",{id:"requirements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),a(" Requirements")],-1),h=e("li",null,"Since this is built with Zig, you should be able to build buzz on a wide variety of architectures even though this has only been tested on x86/M1.",-1),p={href:"https://github.com/buzz-language/buzz/issues/74",target:"_blank",rel:"noopener noreferrer"},b=e("li",null,"libc",-1),g={href:"https://github.com/buzz-language/buzz/blob/main/build.zig#L101",target:"_blank",rel:"noopener noreferrer"},m=r(`<h2 id="build" tabindex="-1"><a class="header-anchor" href="#build" aria-hidden="true">#</a> Build</h2><ol><li>Clone the project: <code>git clone https://github.com/buzz-language/buzz &lt;buzz_dir&gt;</code></li><li>Checkout submodules: <code>git submodule update --init</code></li><li>Have fun:</li></ol><ul><li><code>zig build run -- &lt;myscript.buzz&gt;</code> to run a script</li><li><code>zig build run</code> to start the REPL</li></ul><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># install locally at ~/.local</span>
zig build <span class="token parameter variable">-Doptimize</span><span class="token operator">=</span>ReleaseSafe <span class="token function">install</span> <span class="token parameter variable">-p</span> ~/.local

<span class="token comment"># install globally at /usr/local</span>
<span class="token function">sudo</span> zig build <span class="token parameter variable">-Doptimize</span><span class="token operator">=</span>ReleaseSafe <span class="token function">install</span> <span class="token parameter variable">-p</span> /usr/local
</code></pre></div><p>If you&#39;re usage if performance critical (game dev for example), you can build using <code>-Doptimize=ReleaseFast</code>.</p><p>Remember to modify PATH to include the <code>bin</code> directory where it is installed. For example, <code>export PATH=PATH:/home/xxx/.local/bin</code>. You can then run buzz with <code>buzz &lt;myscript.buzz&gt;</code>.</p>`,7),z={href:"https://marketplace.visualstudio.com/items?itemName=giann.buzz",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/buzz-language/code/blob/main/syntaxes/buzz.tmLanguage.json",target:"_blank",rel:"noopener noreferrer"};function f(x,k){const n=l("ExternalLinkIcon");return o(),s("div",null,[u,d,e("ul",null,[h,e("li",null,[a("Linux or macOS (Windows support "),e("a",p,[a("is coming"),t(n)]),a(")")]),b,e("li",null,[a("zig master (exact version "),e("a",g,[a("here"),t(n)]),a(")")])]),m,e("p",null,[a("Additionally, install the "),e("a",z,[a("VS Code extension"),t(n)]),a(" to get syntax highlighting. If you don't use VS Code but your editor supports "),e("a",_,[a("TextMate grammar files"),t(n)]),a(", you can use that.")])])}const v=i(c,[["render",f],["__file","building-installing.html.vue"]]);export{v as default};
