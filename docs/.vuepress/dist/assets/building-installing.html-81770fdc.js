import{_ as o,r as l,o as i,c as r,b as e,d as a,e as t,a as s}from"./app-832ecfe9.js";const c={},d=s(`<h1 id="building-and-installing" tabindex="-1"><a class="header-anchor" href="#building-and-installing" aria-hidden="true">#</a> Building and installing</h1><h2 id="how-to-install" tabindex="-1"><a class="header-anchor" href="#how-to-install" aria-hidden="true">#</a> How to install</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># install locally at ~/.local</span>
zig build <span class="token parameter variable">-Doptimize</span><span class="token operator">=</span>ReleaseSafe <span class="token function">install</span> <span class="token parameter variable">-p</span> ~/.local

<span class="token comment"># install globally at /usr/local</span>
<span class="token function">sudo</span> zig build <span class="token parameter variable">-Doptimize</span><span class="token operator">=</span>ReleaseSafe <span class="token function">install</span> <span class="token parameter variable">-p</span> /usr/local
</code></pre></div><p>Then, you can run buzz with <code>buzz &lt;myscript.buzz&gt;</code>. Remember to modify PATH to include the <code>bin</code> directory where it is installed. For example, <code>export PATH=PATH:/home/xxx/.local/bin</code>.</p>`,4),u={href:"https://marketplace.visualstudio.com/items?itemName=giann.buzz",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/buzz-language/code/blob/main/syntaxes/buzz.tmLanguage.json",target:"_blank",rel:"noopener noreferrer"},p=e("h2",{id:"how-to-build-develop",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-build-develop","aria-hidden":"true"},"#"),a(" How to build/develop")],-1),b=e("h3",{id:"requirements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#requirements","aria-hidden":"true"},"#"),a(" Requirements")],-1),g=e("li",null,"Since this is built with Zig, you should be able to build buzz on a wide variety of architectures even though this has only been tested on x86/M1.",-1),m={href:"https://github.com/buzz-language/buzz/issues/74",target:"_blank",rel:"noopener noreferrer"},_=e("li",null,"libc",-1),z=e("li",null,"zig master",-1),f=s(`<h3 id="steps" tabindex="-1"><a class="header-anchor" href="#steps" aria-hidden="true">#</a> Steps</h3><ol><li>Clone the project: <code>git clone https://github.com/buzz-language/buzz &lt;buzz_dir&gt;</code></li><li>Checkout submodules: <code>git submodule update --init</code></li><li>Build MIR:</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> mir
<span class="token function">make</span>
</code></pre></div><ol start="4"><li>Have fun: <code>zig build run -- &lt;myscript.buzz&gt;</code></li></ol>`,4);function x(k,v){const n=l("ExternalLinkIcon");return i(),r("div",null,[d,e("p",null,[a("Additionally, install the "),e("a",u,[a("VS Code extension"),t(n)]),a(" to get syntax highlighting. If you don't use VS Code but your editor supports "),e("a",h,[a("TextMate grammar files"),t(n)]),a(", you can use that.")]),p,b,e("ul",null,[g,e("li",null,[a("Linux or macOS (Windows support "),e("a",m,[a("is coming"),t(n)]),a(")")]),_,z]),f])}const w=o(c,[["render",x],["__file","building-installing.html.vue"]]);export{w as default};
