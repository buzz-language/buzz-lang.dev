import{_ as s,o as n,c as a,a as t}from"./app-376a465f.js";const e={},o=t(`<h1 id="ffi" tabindex="-1"><a class="header-anchor" href="#ffi" aria-hidden="true">#</a> ffi</h1><h2 id="cstr" tabindex="-1"><a class="header-anchor" href="#cstr" aria-hidden="true">#</a> cstr</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token keyword">fun</span> <span class="token function">cstr</span><span class="token punctuation">(</span><span class="token keyword">str</span> string<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token keyword">str</span>
</code></pre></div><p>Append <code>\\0</code> at the end of the string</p><p><strong>Returns:</strong> Null terminated string</p><h2 id="alignof" tabindex="-1"><a class="header-anchor" href="#alignof" aria-hidden="true">#</a> alignOf</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token keyword">fun</span> <span class="token function">alignOf</span><span class="token punctuation">(</span><span class="token keyword">str</span> zigType<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token keyword">int</span>
</code></pre></div><p>Get alignment of zig type</p><ul><li><strong><code>zigType</code>:</strong> Zig type (must match C ABI)</li></ul><p><strong>Returns:</strong> Alignement of zig type</p><h2 id="sizeof" tabindex="-1"><a class="header-anchor" href="#sizeof" aria-hidden="true">#</a> sizeOf</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token keyword">fun</span> <span class="token function">sizeOf</span><span class="token punctuation">(</span><span class="token keyword">str</span> zigType<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token keyword">int</span>
</code></pre></div><p>Get size of zig type</p><ul><li><strong><code>zigType</code>:</strong> Zig type (must match C ABI)</li></ul><p><strong>Returns:</strong> Size of zig type</p><h2 id="sizeofstruct" tabindex="-1"><a class="header-anchor" href="#sizeofstruct" aria-hidden="true">#</a> sizeOfStruct</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token keyword">fun</span> <span class="token function">sizeOfStruct</span><span class="token punctuation">(</span><span class="token keyword">type</span> structType<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token keyword">int</span>
</code></pre></div><p>Get size of struct</p><ul><li><strong><code>structType</code>:</strong> Struct type</li></ul><p><strong>Returns:</strong> Size of the struct</p><h2 id="alignofstruct" tabindex="-1"><a class="header-anchor" href="#alignofstruct" aria-hidden="true">#</a> alignOfStruct</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token keyword">fun</span> <span class="token function">alignOfStruct</span><span class="token punctuation">(</span><span class="token keyword">type</span> structType<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token keyword">int</span>
</code></pre></div><p>Get alignement of struct</p><ul><li><strong><code>structType</code>:</strong> Struct type</li></ul><p><strong>Returns:</strong> Alignement of the struct</p>`,25),p=[o];function c(r,i){return n(),a("div",null,p)}const u=s(e,[["render",c],["__file","ffi.html.vue"]]);export{u as default};
