import{_ as s,o as a,c as n,a as e}from"./app-66a723fb.js";const p={},t=e(`<h1 id="operators" tabindex="-1"><a class="header-anchor" href="#operators" aria-hidden="true">#</a> Operators</h1><h2 id="comparison" tabindex="-1"><a class="header-anchor" href="#comparison" aria-hidden="true">#</a> Comparison</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token number">12</span> <span class="token operator">==</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">!=</span> <span class="token number">13</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">&gt;=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">&lt;=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">&gt;</span> <span class="token number">11</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">&lt;</span> <span class="token number">13</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="arithmetic" tabindex="-1"><a class="header-anchor" href="#arithmetic" aria-hidden="true">#</a> Arithmetic</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token number">12</span> <span class="token operator">+</span> <span class="token number">12</span> <span class="token operator">==</span> <span class="token number">24</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">-</span> <span class="token number">12</span> <span class="token operator">==</span> <span class="token number">0;</span>
<span class="token number">12</span> <span class="token operator">*</span> <span class="token number">12</span> <span class="token operator">==</span> <span class="token number">144</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">/</span> <span class="token number">12</span> <span class="token operator">==</span> <span class="token number">1;</span>
<span class="token number">12</span> <span class="token operator">%</span> <span class="token number">12</span> <span class="token operator">==</span> <span class="token number">0;</span>
</code></pre></div><h2 id="logical" tabindex="-1"><a class="header-anchor" href="#logical" aria-hidden="true">#</a> Logical</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token number">12</span> <span class="token operator">&gt;</span> <span class="token number">3 </span><span class="token keyword">and</span> <span class="token number">5 </span><span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token number">12</span> <span class="token operator">&gt;</span> <span class="token number">3 </span><span class="token keyword">or</span> <span class="token number">12</span> <span class="token operator">&lt;</span> <span class="token number">5;</span>
</code></pre></div><h2 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token string-literal"><span class="token string">&quot;hello &quot;</span></span> <span class="token operator">+</span> <span class="token string-literal"><span class="token string">&quot;world&quot;</span></span> <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;hello world&quot;</span></span><span class="token punctuation">;</span>
<span class="token string-literal"><span class="token string">&quot;hello&quot;</span></span> <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;hello&quot;</span></span><span class="token punctuation">;</span>
</code></pre></div><h2 id="bitwise" tabindex="-1"><a class="header-anchor" href="#bitwise" aria-hidden="true">#</a> Bitwise</h2><div class="language-buzz" data-ext="buzz"><pre class="language-buzz"><code><span class="token number">15</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3 </span><span class="token operator">==</span> <span class="token number">120</span><span class="token punctuation">;</span> <span class="token comment">| shift left</span>
<span class="token number">15</span> <span class="token operator">&gt;&gt;</span> <span class="token number">3 </span><span class="token operator">==</span> <span class="token number">1;</span>   <span class="token comment">| shift right</span>
<span class="token number">12</span> <span class="token operator">&amp;</span> <span class="token number">23</span> <span class="token operator">==</span> <span class="token number">4 </span>   <span class="token comment">| and</span>
<span class="token number">15</span> <span class="token operator">^</span> <span class="token number">3 </span><span class="token operator">==</span> <span class="token number">12</span><span class="token punctuation">;</span>   <span class="token comment">| xor</span>
<span class="token number">15</span> <span class="token operator">\\</span> <span class="token number">3 </span><span class="token operator">==</span> <span class="token number">15</span><span class="token punctuation">;</span>   <span class="token comment">| or</span>
<span class="token operator">~</span><span class="token number">15</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">;</span>     <span class="token comment">| not</span>
</code></pre></div>`,11),o=[t];function r(c,l){return a(),n("div",null,o)}const k=s(p,[["render",r],["__file","operators.html.vue"]]);export{k as default};
